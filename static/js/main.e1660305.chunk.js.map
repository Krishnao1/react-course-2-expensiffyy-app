{"version":3,"sources":["components/ExpenseListItem.js","selectors/expenses.js","components/ExpenseList.js","components/ExpenseListFilters.js","actions/filters.js","components/ExpenseDashboardPage.js","components/ExpenseForm.js","actions/expenses.js","components/AddExpensePage.js","components/EditExpensePage.js","components/HelpPage.js","components/NotFoundPage.js","components/Header.js","routers/AppRouter.js","reducers/expenses.js","reducers/filters.js","index.js","store/configureStore.js"],"names":["ExpenseListItem","id","description","amount","createdAt","to","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","moment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","toLowerCase","includes","sort","a","b","connect","state","selectExpenses","filters","props","length","map","key","ExpenseListFilters","calendarFocused","onDatesChange","setStartDate","setEndDate","onFocusChange","setState","onTextChange","e","setTextFilter","target","value","onSortChange","sortByDate","sortByAmount","type","this","onChange","focusedInput","showClearDates","numberOfMonths","isOutsideRange","React","Component","dispatch","ExpenseDashboardPage","ExpenseForm","onDescriptionChange","onNoteChange","note","onAmountChange","match","onDateChange","focused","onSubmit","preventDefault","error","parseFloat","valueOf","toString","placeholder","autoFocus","date","addExpense","uuid","AddExpensePage","history","push","undefined","EditExpensePage","editExpense","onRemove","removeExpense","onClick","find","params","updates","data","HelpPage","NotFoundPage","Header","activeClassName","exact","AppRouter","path","component","expensesReducerDefaultState","action","filtersReducerDefaultState","startOf","endOf","store","createStore","combineReducers","expensesReducer","filtersReducer","window","__REDUX_DEVTOOLS_EXTENSION__","getState","visibleExpenses","getVisibleExpenses","console","log","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1660305.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ExpenseListItem = ({ id, description, amount, createdAt }) => (\n  <div>\n    <Link to={`/edit/${id}`}>\n      <h3>{description}</h3>\n    </Link>\n    <p>{amount} - {createdAt}</p>\n  </div>\n);\n\nexport default ExpenseListItem;\n","import moment from 'moment';\n\n// Get visible expenses\n\nexport default (expenses, { text, sortBy, startDate, endDate }) => {\n  return expenses.filter((expense) => {\n    const createdAtMoment = moment(expense.createdAt);\n    const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment, 'day') : true;\n    const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment, 'day') : true;\n    const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\n\n    return startDateMatch && endDateMatch && textMatch;\n  }).sort((a, b) => {\n    if (sortBy === 'date') {\n      return a.createdAt < b.createdAt ? 1 : -1;\n    } else if (sortBy === 'amount') {\n      return a.amount < b.amount ? 1 : -1;\n    }else {\n     return a.amount=b.amount\n    }\n  });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseListItem from './ExpenseListItem';\nimport selectExpenses from '../selectors/expenses';\n\nexport const ExpenseList = (props) => (\n  <div>\n    {\n      props.expenses.length === 0 ? (\n        <p>No expenses</p>\n      ) : (\n          props.expenses.map((expense) => {\n            return <ExpenseListItem key={expense.id} {...expense} />;\n          })\n        )\n    }\n  </div>\n);\n\nconst mapStateToProps = (state) => {\n  return {\n    expenses: selectExpenses(state.expenses, state.filters)\n  };\n};\n\nexport default connect(mapStateToProps)(ExpenseList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { DateRangePicker } from 'react-dates';\nimport { setTextFilter, sortByDate, sortByAmount, setStartDate, setEndDate } from '../actions/filters';\n\nexport class ExpenseListFilters extends React.Component {\n  state = {\n    calendarFocused: null\n  };\n  onDatesChange = ({ startDate, endDate }) => {\n    this.props.setStartDate(startDate);\n    this.props.setEndDate(endDate);\n  };\n  onFocusChange = (calendarFocused) => {\n    this.setState(() => ({ calendarFocused }));\n  }\n  onTextChange = (e) => {\n    this.props.setTextFilter(e.target.value);\n  };\n  onSortChange = (e) => {\n    if (e.target.value === 'date') {\n      this.props.sortByDate();\n    } else if (e.target.value === 'amount') {\n      this.props.sortByAmount();\n    }\n  };\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          value={this.props.filters.text}\n          onChange={this.onTextChange}\n        />\n        <select\n          value={this.props.filters.sortBy}\n          onChange={this.onSortChange}\n        >\n          <option value=\"date\">Date</option>\n          <option value=\"amount\">Amount</option>\n        </select>\n        <DateRangePicker\n          startDate={this.props.filters.startDate}\n          endDate={this.props.filters.endDate}\n          onDatesChange={this.onDatesChange}\n          focusedInput={this.state.calendarFocused}\n          onFocusChange={this.onFocusChange}\n          showClearDates={true}\n          numberOfMonths={1}\n          isOutsideRange={() => false}\n        />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  filters: state.filters\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setTextFilter: (text) => dispatch(setTextFilter(text)),\n  sortByDate: () => dispatch(sortByDate()),\n  sortByAmount: () => dispatch(sortByAmount()),\n  setStartDate: (startDate) => dispatch(setStartDate(startDate)),\n  setEndDate: (endDate) => dispatch(setEndDate(endDate))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseListFilters);\n","// SET_TEXT_FILTER\nexport const setTextFilter = (text = '') => ({\n  type: 'SET_TEXT_FILTER',\n  text\n});\n\n// SORT_BY_DATE\nexport const sortByDate = () => ({\n  type: 'SORT_BY_DATE'\n});\n\n// SORT_BY_AMOUNT\nexport const sortByAmount = () => ({\n  type: 'SORT_BY_AMOUNT'\n});\n\n// SET_START_DATE\nexport const setStartDate = (startDate) => ({\n  type: 'SET_START_DATE',\n  startDate\n});\n\n// SET_END_DATE\nexport const setEndDate = (endDate) => ({\n  type: 'SET_END_DATE',\n  endDate\n});\n","import React from 'react';\nimport ExpenseList from './ExpenseList';\nimport ExpenseListFilters from './ExpenseListFilters';\n\nconst ExpenseDashboardPage = () => (\n  <div>\n    <ExpenseListFilters />\n    <ExpenseList />\n  </div>\n);\n\nexport default ExpenseDashboardPage;\n","import React from 'react';\nimport moment from 'moment';\nimport { SingleDatePicker } from 'react-dates';\n\nexport default class ExpenseForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      description: props.expense ? props.expense.description : '',\n      note: props.expense ? props.expense.note : '',\n      amount: props.expense ? (props.expense.amount / 100).toString() : '',\n      createdAt: props.expense ? moment(props.expense.createdAt) : moment(),\n      calendarFocused: false,\n      error: ''\n    };\n  }\n  onDescriptionChange = (e) => {\n    const description = e.target.value;\n    this.setState(() => ({ description }));\n  };\n  onNoteChange = (e) => {\n    const note = e.target.value;\n    this.setState(() => ({ note }));\n  };\n  onAmountChange = (e) => {\n    const amount = e.target.value;\n\n    if (!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n      this.setState(() => ({ amount }));\n    }\n  };\n  onDateChange = (createdAt) => {\n    if (createdAt) {\n      this.setState(() => ({ createdAt }));\n    }\n  };\n  onFocusChange = ({ focused }) => {\n    this.setState(() => ({ calendarFocused: focused }));\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!this.state.description || !this.state.amount) {\n      this.setState(() => ({ error: 'Please provide description and amount.' }));\n    } else {\n      this.setState(() => ({ error: '' }));\n      this.props.onSubmit({\n        description: this.state.description,\n        amount: parseFloat(this.state.amount, 10) * 100,\n        createdAt: this.state.createdAt.valueOf(),\n        note: this.state.note\n      });\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.state.error && <p>{this.state.error}</p>}\n        <form onSubmit={this.onSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Description\"\n            autoFocus\n            value={this.state.description}\n            onChange={this.onDescriptionChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Amount\"\n            value={this.state.amount}\n            onChange={this.onAmountChange}\n          />\n          <SingleDatePicker\n            date={this.state.createdAt}\n            onDateChange={this.onDateChange}\n            focused={this.state.calendarFocused}\n            onFocusChange={this.onFocusChange}\n            numberOfMonths={1}\n            isOutsideRange={() => false}\n          />\n          <textarea\n            placeholder=\"Add a note for your expense (optional)\"\n            value={this.state.note}\n            onChange={this.onNoteChange}\n          >\n          </textarea>\n          <button>Add Expense</button>\n        </form>\n      </div>\n    )\n  }\n}\n","import uuid from 'uuid';\n\n// ADD_EXPENSE\nexport const addExpense = (\n  {\n    description = '',\n    note = '',\n    amount = 0,\n    createdAt = 0\n  } = {}\n) => ({\n  type: 'ADD_EXPENSE',\n  expense: {\n    id: uuid(),\n    description,\n    note,\n    amount,\n    createdAt\n  }\n});\n\n// REMOVE_EXPENSE\nexport const removeExpense = ({ id } = {}) => ({\n  type: 'REMOVE_EXPENSE',\n  id\n});\n\n// EDIT_EXPENSE\nexport const editExpense = (id, updates) => ({\n  type: 'EDIT_EXPENSE',\n  id,\n  updates\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport { addExpense } from '../actions/expenses';\n\nexport class AddExpensePage extends React.Component {\n  onSubmit = (expense) => {\n    this.props.addExpense(expense);\n    this.props.history.push('/');\n  };\n  render() {\n    return (\n      <div>\n        <h1>Add Expense</h1>\n        <ExpenseForm\n          onSubmit={this.onSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addExpense: (expense) => dispatch(addExpense(expense))\n});\n\nexport default connect(undefined, mapDispatchToProps)(AddExpensePage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport { editExpense, removeExpense } from '../actions/expenses';\n\nexport class EditExpensePage extends React.Component {\n  onSubmit = (expense) => {\n    this.props.editExpense(this.props.expense.id, expense);\n    this.props.history.push('/');\n  };\n  onRemove = () => {\n    this.props.removeExpense({ id: this.props.expense.id });\n    this.props.history.push('/');\n  };\n  render() {\n    return (\n      <div>\n        <ExpenseForm\n          expense={this.props.expense}\n          onSubmit={this.onSubmit}\n        />\n        <button onClick={this.onRemove}>Remove</button>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, props) => ({\n  expense: state.expenses.find((expense) => expense.id === props.match.params.id)\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  editExpense: (id, expense) => dispatch(editExpense(id, expense)),\n  removeExpense: (data) => dispatch(removeExpense(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExpensePage);\n","import React from 'react';\n\nconst HelpPage = () => (\n  <div>\n    This is from my help component\n  </div>\n);\n\nexport default HelpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <div>\n    404 - <Link to=\"/\">Go home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => (\n  <header>\n    <h1>Expensify</h1>\n    <NavLink to=\"/\" activeClassName=\"is-active\" exact={true}>Dashboard</NavLink>\n    <NavLink to=\"/create\" activeClassName=\"is-active\">Create Expense</NavLink>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport ExpenseDashboardPage from '../components/ExpenseDashboardPage';\nimport AddExpensePage from '../components/AddExpensePage';\nimport EditExpensePage from '../components/EditExpensePage';\nimport HelpPage from '../components/HelpPage';\nimport NotFoundPage from '../components/NotFoundPage';\nimport Header from '../components/Header';\n\nconst AppRouter = () => (\n  <BrowserRouter>\n    <div>\n      <Header />\n      <Switch>\n        <Route path=\"/\" component={ExpenseDashboardPage} exact={true} />\n        <Route path=\"/create\" component={AddExpensePage} />\n        <Route path=\"/edit/:id\" component={EditExpensePage} />\n        <Route path=\"/help\" component={HelpPage} />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n);\n\nexport default AppRouter;\n","// Expenses Reducer\n\nconst expensesReducerDefaultState = [];\n\nexport default (state = expensesReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'ADD_EXPENSE':\n      return [\n        ...state,\n        action.expense\n      ];\n    case 'REMOVE_EXPENSE':\n      return state.filter(({ id }) => id !== action.id);\n    case 'EDIT_EXPENSE':\n      return state.map((expense) => {\n        if (expense.id === action.id) {\n          return {\n            ...expense,\n            ...action.updates\n          };\n        } else {\n          return expense;\n        };\n      });\n    default:\n      return state;\n  }\n};\n","import moment from 'moment';\n\n// Filters Reducer\n\nconst filtersReducerDefaultState = {\n  text: '',\n  sortBy: 'date',\n  startDate: moment().startOf('month'),\n  endDate: moment().endOf('month')\n};\n\nexport default (state = filtersReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'SET_TEXT_FILTER':\n      return {\n        ...state,\n        text: action.text\n      };\n    case 'SORT_BY_AMOUNT':\n      return {\n        ...state,\n        sortBy: 'amount'\n      };\n    case 'SORT_BY_DATE':\n      return {\n        ...state,\n        sortBy: 'date'\n      };\n    case 'SET_START_DATE':\n      return {\n        ...state,\n        startDate: action.startDate\n      };\n    case 'SET_END_DATE':\n      return {\n        ...state,\n        endDate: action.endDate\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport AppRouter from './routers/AppRouter';\r\nimport configureStore from './store/configureStore';\r\nimport { addExpense } from './actions/expenses.js';\r\nimport getVisibleExpenses from './selectors/expenses';\r\nimport 'react-dates/initialize';\r\nimport 'normalize.css/normalize.css';\r\nimport './styles/styles.scss';\r\n\r\nconst store = configureStore();\r\n\r\nstore.dispatch(addExpense({ description: 'Water bill', amount: 4500 }));\r\nstore.dispatch(addExpense({ description: 'Gas bill', createdAt: 1000 }));\r\nstore.dispatch(addExpense({ description: 'Rent', amount: 109500 }));\r\n\r\nconst state = store.getState();\r\nconst visibleExpenses = getVisibleExpenses(state.expenses, state.filters);\r\nconsole.log(visibleExpenses);\r\n\r\nconst jsx = (\r\n  <Provider store={store}>\r\n    <AppRouter />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(jsx, document.getElementById('app'));\r\n","import { createStore, combineReducers } from 'redux';\nimport expensesReducer from '../reducers/expenses';\nimport filtersReducer from '../reducers/filters';\n\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      expenses: expensesReducer,\n      filters: filtersReducer\n    }),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\n  return store;\n};\n"],"sourceRoot":""}